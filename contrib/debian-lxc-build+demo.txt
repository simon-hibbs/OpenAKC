This script is designed to work on "debian/ubuntu" based systems, and
derivatives.  If it is run a a non-root user then it sets up unprivilaged
lxc for the current user (this requires sudo access to configure), builds 2
containers and uses them to build/install the debian packages for OpenAKC
in test/demo environment for the user to experiment with.... setting up ssh
keys, registering them, and setting a basic role configuration to allow a
test user to gain access to an account.

Once the build is done, ssh keys will be automatically created for 2 test
users "admin-user" and "normal-user", but as part of the demo, you need to
enter these  to "register" with OpenAKC.  Note that you must enter the 2
(different) keys as instructed for the demo to work.

WARNING!!! - Ultimately more of this script turned out to be about making
sure Unprivilaged LXC containers work on your system. It turns out that this
is a much harder task than installing OpenAKC.  We do our best to configure
everything for you, however if it's already configured we simply assume it
works rather than change existing config.  Please keep this in mind as you
proceed.  If you are unsure, please consider following the "quickstart"
guide (or run as root) instead.  It's also worth noting that some of the
pre-built container images we rely on, particularly the more obscure ones
are not always working, YMMV!

Note that some trivial errors which do not impact the setup are not
deliberately hidden so that any more serious issues are visible, they can be
safely ignored.  For example:-

"sudo: setrlimit(RLIMIT_CORE): Operation not permitted" - This is caused by
a bug in "sudo", which is being fixed at the time or writing.
&
"mesg: ttyname failed: No such device" - this is generated because roots
environment on some distributions runs the "mesg" tool to update the
environment and this may complain if there is no TTY to write messages to,
as when automating installation.

This script has been tested on vanilla installs of Debian 10 (Buster), Ubuntu 18.04
(Bionic), Ubuntu 20.04 (Focal) - including PopOS.

Command line options are:-

--yes - Don't ask questions and proceed
(will still stop if root password is needed)

--dnsfix - will override container dns config with google DNS servers.

--norebuild - Don't rebuild containers.

--nocompile - Dont compile packages (only useful for debugging etc.)

--noinstall - Don't install packages (only useful for debugging etc.)



Enjoy.

J. Lewis.
